import unittest
import sys
import os

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from configurator import config, make_config
if not make_config("config.ini"):
    exit(1)

from utils import check_name_for_violations

class GenderDetectionTests(unittest.TestCase):
    def test_nickname_violations(self):
        test_nicknames__violations = ["–í–∏–∫–∞ (–ø–æ—Å–º–æ—Ç—Äu –ø—Ä0—Ñ–∏–ª—å)", "–ú–∏–ª–∞ (–∑–∞–≥–ª—è–Ω–∏ –≤ –ø—Ä–æ—Ñ)", "–õ–∏–Ω–∞ (–∂–º–∏ –Ω–∞ –ø—Ä–æ—Ñu–ª—å)",
                      "–ù–∏–Ω–∞ (üëâ –ø—Ä–æ—Ñu–ª—å)", "–±–ª—è–¥—å", "—Å—É–∫–∞", "–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –±–ª—è–¥–∏ –∑–¥–µ—Å—å"]

        test_nicknames__clean = ["–ù–∏–∫–∏—Ç–∞", "Laslo", "brandy :] xD 555 TF"]

        for name in test_nicknames__violations:
            with self.subTest(name=name):
                self.assertEqual(check_name_for_violations(name), False,
                    f"Failed for option: {name}")

        for name in test_nicknames__clean:
            with self.subTest(name=name):
                self.assertEqual(check_name_for_violations(name), True,
                    f"Failed for option: {name}")
